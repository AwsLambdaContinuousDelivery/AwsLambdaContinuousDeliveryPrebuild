{
    "Parameters": {
        "branch": {
            "Description": "branch triggering deployment",
            "Type": "String"
        },
        "repo": {
            "Description": "url of the repository",
            "Type": "String"
        }
    },
    "Resources": {
        "ArtifactStoreS3Location": {
            "Properties": {
                "AccessControl": "Private"
            },
            "Type": "AWS::S3::Bucket"
        },
        "BackEndLambdaBuilder": {
            "Properties": {
                "Artifacts": {
                    "Type": "CODEPIPELINE"
                },
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "Image": "frolvlad/alpine-python3",
                    "PrivilegedMode": "false",
                    "Type": "LINUX_CONTAINER"
                },
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-LambdaBuilder"
                },
                "ServiceRole": {
                    "Ref": "CodeBuildRole"
                },
                "Source": {
                    "BuildSpec": {
                        "Fn::Join": [
                            "\n",
                            [
                                "version: 0.2",
                                "\n",
                                "phases:",
                                "  install:",
                                "    commands:",
                                "      - apk update",
                                "      - apk upgrade",
                                "      - apk add --no-cache bash git openssl",
                                "  pre_build:",
                                "    commands:",
                                "      - pip3 install troposphere",
                                "      - pip3 install awacs",
                                "      - git clone https://github.com/AwsLambdaContinuousDelivery/AwsLambdaContinuousDeliveryTools.git",
                                "      - cd AwsLambdaContinuousDeliveryTools",
                                "      - pip3 install .",
                                "      - cd ..",
                                "      - rm -rf AwsLambdaContinuousDeliveryTools",
                                "      - wget https://raw.githubusercontent.com/AwsLambdaContinuousDelivery/AwsLambdaContinuousDeliveryLambdaCfGenerator/dev/createCF.py",
                                "  build:",
                                "    commands:",
                                "\n",
                                {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            {
                                                "Fn::Join": [
                                                    " ",
                                                    [
                                                        "      - python3 createCF.py --path $(pwd)/ --stage",
                                                        "PROD --stack",
                                                        {
                                                            "Fn::Sub": "${AWS::StackName}"
                                                        },
                                                        ">> stackPROD.json"
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "\n",
                                {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "artifacts:",
                                            "  files:",
                                            "    - stackPROD.json"
                                        ]
                                    ]
                                }
                            ]
                        ]
                    },
                    "Type": "CODEPIPELINE"
                }
            },
            "Type": "AWS::CodeBuild::Project"
        },
        "CFDeployRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudformation.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:*",
                                        "lambda:GetFunction",
                                        "lambda:CreateFunction",
                                        "lambda:GetFunctionConfiguration",
                                        "lambda:DeleteFunction",
                                        "lambda:UpdateFunctionCode",
                                        "lambda:UpdateFunctionConfiguration",
                                        "lambda:CreateAlias",
                                        "lambda:DeleteAlias"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "iam:DeleteRole",
                                        "iam:DeleteRolePolicy",
                                        "iam:GetRole",
                                        "iam:PutRolePolicy",
                                        "iam:CreateRole",
                                        "iam:PassRole"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "CloudFormationDeployPolicy"
                    }
                ],
                "RoleName": {
                    "Fn::Sub": "${AWS::StackName}-CFDeployRole"
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "CodeBuildRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "codebuild.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": {
                            "Fn::Sub": "${AWS::StackName}-CodeBuildPolicy"
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Sub": "${AWS::StackName}-LambdaCodeBuildRole"
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "FunctionsPipeline": {
            "Properties": {
                "ArtifactStore": {
                    "Location": {
                        "Ref": "ArtifactStoreS3Location"
                    },
                    "Type": "S3"
                },
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Pipeline"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "PipelineRole",
                        "Arn"
                    ]
                },
                "Stages": [
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Source",
                                    "Owner": "AWS",
                                    "Provider": "CodeCommit",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "BranchName": {
                                        "Ref": "branch"
                                    },
                                    "RepositoryName": {
                                        "Ref": "repo"
                                    }
                                },
                                "Name": {
                                    "Fn::Sub": "${AWS::StackName}-LambdaSource"
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": "SourceFiles"
                                    }
                                ],
                                "RunOrder": "1"
                            }
                        ],
                        "Name": "Source"
                    },
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Build",
                                    "Owner": "AWS",
                                    "Provider": "CodeBuild",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "ProjectName": {
                                        "Ref": "BackEndLambdaBuilder"
                                    }
                                },
                                "InputArtifacts": [
                                    {
                                        "Name": "SourceFiles"
                                    }
                                ],
                                "Name": {
                                    "Fn::Sub": "${AWS::StackName}-CfBuilderAction"
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": "CfOutputTemplate"
                                    }
                                ],
                                "RunOrder": "1"
                            }
                        ],
                        "Name": "Build"
                    },
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Deploy",
                                    "Owner": "AWS",
                                    "Provider": "CloudFormation",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "ActionMode": "CREATE_UPDATE",
                                    "Capabilities": "CAPABILITY_NAMED_IAM",
                                    "RoleArn": {
                                        "Fn::GetAtt": [
                                            "CFDeployRole",
                                            "Arn"
                                        ]
                                    },
                                    "StackName": {
                                        "Fn::Sub": "${AWS::StackName}FunctionsPROD"
                                    },
                                    "TemplatePath": "CfOutputTemplate::stackPROD.json"
                                },
                                "InputArtifacts": [
                                    {
                                        "Name": "CfOutputTemplate"
                                    }
                                ],
                                "Name": "DeployPROD",
                                "RunOrder": "1"
                            }
                        ],
                        "Name": "PROD_Deploy"
                    }
                ]
            },
            "Type": "AWS::CodePipeline::Pipeline"
        },
        "PipelineRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "codepipeline.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:GetObjectVersion",
                                        "s3:GetBucketVersioning"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "s3:PutObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::codepipeline*",
                                        "arn:aws:s3:::elasticbeanstalk*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "codecommit:CancelUploadArchive",
                                        "codecommit:GetBranch",
                                        "codecommit:GetCommit",
                                        "codecommit:GetUploadArchiveStatus",
                                        "codecommit:UploadArchive"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "codedeploy:CreateDeployment",
                                        "codedeploy:GetApplicationRevision",
                                        "codedeploy:GetDeployment",
                                        "codedeploy:GetDeploymentConfig",
                                        "codedeploy:RegisterApplicationRevision"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "elasticbeanstalk:*",
                                        "ec2:*",
                                        "elasticloadbalancing:*",
                                        "autoscaling:*",
                                        "cloudwatch:*",
                                        "s3:*",
                                        "sns:*",
                                        "cloudformation:*",
                                        "rds:*",
                                        "sqs:*",
                                        "ecs:*",
                                        "iam:PassRole"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "lambda:InvokeFunction",
                                        "lambda:ListFunctions"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "opsworks:CreateDeployment",
                                        "opsworks:DescribeApps",
                                        "opsworks:DescribeCommands",
                                        "opsworks:DescribeDeployments",
                                        "opsworks:DescribeInstances",
                                        "opsworks:DescribeStacks",
                                        "opsworks:UpdateApp",
                                        "opsworks:UpdateStack"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "cloudformation:CreateStack",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:UpdateStack",
                                        "cloudformation:CreateChangeSet",
                                        "cloudformation:DeleteChangeSet",
                                        "cloudformation:DescribeChangeSet",
                                        "cloudformation:ExecuteChangeSet",
                                        "cloudformation:SetStackPolicy",
                                        "cloudformation:ValidateTemplate",
                                        "iam:PassRole"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "codebuild:BatchGetBuilds",
                                        "codebuild:StartBuild"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": {
                            "Fn::Sub": "oneClickCodePipeServicePolicy-${AWS::StackName}"
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Sub": "${AWS::StackName}PipelineRole"
                }
            },
            "Type": "AWS::IAM::Role"
        }
    }
}
